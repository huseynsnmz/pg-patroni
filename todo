# patroni_env.conf > parolalar bu alana taşınmalı mı?
# patroni.yml ayarlarını geliştir > Bağlantıları otomatik SSL oluşturmaya çalışacağım.
# Belge son haline geldiğinde IP'leri kaldır.
# https://www.linode.com/docs/databases/postgresql/create-a-highly-available-postgresql-cluster-using-patroni-and-haproxy/
# consul acl testi
# patroni callback scripti
# pgbouncer consul-template şeması


Your existing configuration of HAProxy -> PGBouncer -> PGServer approch is better. And that only works. Here is the reason: HAProxy redirects connection to different servers. this results in MAC address change in the database connection. So if PGBouncer is above HAProxy, each time the connections in the pool gets invalidated because of MAC address change

callbacks: callback scripts to run on certain actions. Patroni will pass the action, role and cluster name. (See scripts/aws.py as an example of how to write them.)

        on_reload: run this script when configuration reload is triggered.
        on_restart: run this script when the cluster restarts.
        on_role_change: run this script when the cluster is being promoted or demoted.
        on_start: run this script when the cluster starts.
        on_stop: run this script when the cluster stops.




          bootstrap:
            method: my_bootstrap_method  # if there is no `method` defined - use initdb

            my_bootstrap_method:
              command: /my_bootstrap_command.sh
              recovery_conf:
                restore_command: '/my_restore_command.sh %f %p'
                recovery_target_action: promote  # should we enforce it?
          #      recovery_target_name:
          #      recovery_target_time:
          #      recovery_target_xid:
          #      recovery_target_inclusive:
          #      recovery_target_timeline: latest


          postgresql:
    create_replica_methods:
        - pgbackrest
        - basebackup
    pgbackrest:
        command: /usr/bin/pgbackrest --stanza=<scope> --delta restore
        keep_data: True
        no_params: True
    basebackup:
        max-rate: '100M'
